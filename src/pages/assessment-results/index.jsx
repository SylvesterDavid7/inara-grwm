
import React, { useState, useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import Header from '../../components/ui/Header';
import SummaryCard from './components/SummaryCard';
import RoutineDisplay from './components/RoutineDisplay';
import WeeklyRoutine from './components/WeeklyRoutine';
import ActionButtons from './components/ActionButtons';
import Icon from '../../components/AppIcon';

const AssessmentResults = () => {
  const location = useLocation();
  const [analysis, setAnalysis] = useState(null);
  const [assessment, setAssessment] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    if (location.state && location.state.analysis) {
      setAnalysis(location.state.analysis);
      setAssessment({
        questions: location.state.questions,
        answers: location.state.answers,
      });
    } else {
      setError('No analysis data found. Please go back and complete the assessment again.');
    }
  }, [location.state]);

  if (error || !analysis || !assessment) {
    return (
      <div className="flex items-center justify-center h-screen bg-background text-white p-8 text-center">
        {error || 'Loading Your Personalized Plan...'}
      </div>
    );
  }

  const getAnswerDisplay = (questionId) => {
    const question = assessment.questions.find(q => q.id === questionId);
    const answer = assessment.answers[assessment.questions.indexOf(question)];
    if (!question || !answer) return 'N/A';
    
    if (question.type === 'single-select' || question.type === 'image-select') {
      return question.options.find(o => o.value === answer)?.label || answer;
    }
    if (question.type === 'multi-select') {
      return answer.map(val => question.options.find(opt => opt.value === val)?.label || val).join(', ');
    }
    return answer;
  };

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="text-center mb-12">
          <h1 className="text-4xl font-heading font-heading-semibold text-black">Your Personalized Skincare Plan</h1>
          <p className="mt-2 text-lg text-foreground/70">Generated by AI based on your assessment.</p>
        </div>

        {/* Summary Cards */}
        <div className="mb-12">
            <h2 className="text-2xl font-heading font-heading-semibold text-foreground mb-6">Your Skin Profile</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <SummaryCard icon="Smile" title="Skin Type" value={getAnswerDisplay('skin-type')} />
                <SummaryCard icon="AlertCircle" title="Main Concerns" value={getAnswerDisplay('skin-concerns')} />
                <SummaryCard icon="Thermometer" title="Sensitivity" value={`${getAnswerDisplay('sensitivity-level')} / 10`} />
                <SummaryCard icon="Cloud" title="Climate" value={getAnswerDisplay('climate')} />
                <SummaryCard icon="DollarSign" title="Budget" value={getAnswerDisplay('budget')} />
                <SummaryCard icon="Box" title="Routine Style" value={getAnswerDisplay('current-routine')} />
            </div>
        </div>

        {/* Detailed Routine */}
        <div className="mb-12">
            <h2 className="text-2xl font-heading font-heading-semibold text-foreground mb-6">Your Recommended Routine</h2>
            <div className="space-y-8">
                <RoutineDisplay timeOfDay="Morning" icon="Sun" routine={analysis.morningRoutine} />
                <RoutineDisplay timeOfDay="Evening" icon="Moon" routine={analysis.eveningRoutine} />
                <WeeklyRoutine routine={analysis.weeklyRoutine} />
            </div>
        </div>

        {/* Action Buttons */}
        <ActionButtons />
      </div>
    </div>
  );
};

export default AssessmentResults;
